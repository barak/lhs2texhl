Literate HS to TeX Highlighter Helper
=====================================

Hi there,

welcome to the lhs2TeX-hl readme. lhs2TeX-hl is a tool for generating
formatting rules used by lhs2TeX. This tool is to be used in combination with
lhs2TeX. 
Hi there,

This is the very first release of the lhs2tex helper for syntax highlighting.
Use it in addition with lhs2tex. Due to a huge demand I make this tool 
publicly available. Use it your own risk. I am not responsible for any
conveniences or inconveniences caused by using this software.

It aims to detect the `kind' of a token either by it's use or it's
declaration. Trying to detect both local declarations and usages.

Regards,
Alessandro Vermeulen

INSTALLING
----------

* Make sure you have cabal installed and run
  > cabal install lhs2TeX-hl
  
* Or download the latest release from:
    http://hackage.haskell.org/package/lhs2TeX-hl

* Or visit the github page:
    https://github.com/spockz/lhs2texhl

USAGE or HOW-TO
---------------
Using lhs2TeX-hl is very simple. Just pass it your haskell source file and it
will automatically generating formatting directives for you. Including but not
limited to formatting directives for data constructors and functions. Currently
`functions' that are strictly constants are not highlighted as functions.

----
lhs2TeX-hl -o <filename>.fmt <filename>.lhs
----

For more details see:

----
lhs2TeX-hl --help
----

Currently this is the only way to work with the tool.

In your .tex files add %include <filename>.lhs to tell lhs2TeX-hl to use the
generated formatting directives. You'll need to provide the following LaTeX
commands yourself:

* \lhsCHsyntax
* \lhsCHkeyword
* \lhsCHprelude
* \lhsCHtype
* \lhsCHconstructor
* \lhsCHfunction
* \lhsCHinfixoperator
* \lhsCHclass

Check out the ./examples directory for example themes.

This tool only generates formatting directives for identifiers (including
operators) for you. If you want to change the formatting of characters,
strings or literal numbers add the following directives:

----
%subst char a     = "\color{char}\text{\tt ''" a "''}"
%subst string a   = "\color{string}\text{\tt \char34 " a "\char34}"
%subst numeral a  = "\color{numeral}{ " a " }"
----

For other available substitutions consult the lhs2TeX manual.

KNOWN ISSUES
------------

* Infix operators may not work that great, or normal functions that are used
  `infix`. Sometimes you might get an `ambiguous infix operator' error.
* AGDA isn't supported yet unfortunately.
* Errors aren't that informative. :)

CHANGES
-------
1.2.2::
  * And classes are now also written to the output file, somewhere I was
    sleeping during all this. :)
1.2.1::  
  * Fixed a regression, detection of language pragmas was apparently broken and
    now they aren't anymore.
1.2.0::
  * Hopefully the ``ambiguous infix operator'' error shouldn't occur that often
    anymore.
  * Removed the AGDA dependency for until it actually works.
  * Classes are now detected.

